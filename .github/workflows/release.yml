name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'  # Triggers on version tags like v1.0.0, v2.1.3, etc.
      - '*.*.*'   # Also accepts tags without v prefix like 1.0.0

permissions:
  contents: write

jobs:
  build-release:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      # Only run if package.json exists (for plugins with npm dependencies)
      - name: Setup Node.js
        if: hashFiles('package.json') != ''
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install dependencies
        if: hashFiles('package.json') != ''
        run: npm ci
      
      - name: Build production assets
        if: hashFiles('package.json') != ''
        run: npm run build
      
      # Only run if composer.json exists
      - name: Setup PHP
        if: hashFiles('composer.json') != ''
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
      
      - name: Install Composer dependencies
        if: hashFiles('composer.json') != ''
        run: composer install --no-dev --optimize-autoloader
      
      - name: Get plugin/theme slug from directory
        id: slug
        run: echo "slug=$(basename $GITHUB_WORKSPACE)" >> $GITHUB_OUTPUT
      
      - name: Create release directory
        run: |
          mkdir -p release-temp
          rsync -av --exclude-from='.distignore' ./ release-temp/${{ steps.slug.outputs.slug }}/
      
      - name: Create zip file
        run: |
          cd release-temp
          zip -r ${{ steps.slug.outputs.slug }}.zip ${{ steps.slug.outputs.slug }}/
          mv ${{ steps.slug.outputs.slug }}.zip ../
      
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ steps.slug.outputs.slug }}.zip
          generate_release_notes: true
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Upload release artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.slug.outputs.slug }}
          path: ${{ steps.slug.outputs.slug }}.zip
          retention-days: 30